{"version":3,"file":"static/js/624.46acc1a3.chunk.js","mappings":"mQAIaA,EAAO,WAClB,OAAwCC,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KA0BA,OAnBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAkB,IAAIC,gBACtBC,EAAe,CAAEC,OAAQH,EAAgBG,QAFjC,wCAId,8GAEuBC,EAAAA,EAAAA,IAAgBF,GAFvC,OAEUG,EAFV,OAGIP,EAAgBO,EAAKC,SAHzB,mDAKqB,iBAAb,KAAIC,KALZ,mDAOIC,QAAQC,IAAI,SAPhB,0DAJc,sBAgBd,OAhBc,mCAedC,GACO,kBAAMV,EAAgBW,OAAtB,CACR,GAAE,KAGD,iCACE,4CACA,SAAC,IAAD,CAAWC,OAAQf,MAGxB,C,0GCnCYgB,EAAkBC,EAAAA,GAAAA,GAAH,6HAQfC,EAAYD,EAAAA,GAAAA,GAAH,4CAITE,EAAcF,EAAAA,GAAAA,IAAH,2DAKXG,EAAaH,EAAAA,GAAAA,EAAH,0M,SCcvB,EAxBkB,SAAC,GAAgB,IAAdF,EAAa,EAAbA,OACbM,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACN,EAAD,UACGD,EAAOQ,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,YAAd,OACV,SAACR,EAAD,WACE,UAAC,KAAD,CAAMS,GAAE,kBAAaH,GAAMI,MAAO,CAAEC,KAAMR,GAA1C,WACE,SAACF,EAAD,CACEW,IACEJ,EAAW,yCAC2BA,GAClC,6EAENK,IAAG,iBAAYN,MAEjB,SAACL,EAAD,UAAaK,QAVDD,EADN,KAiBjB,C,2NC7BKQ,EAAW,gCACXC,EAAU,mCAEH1B,EAAe,mCAAG,WAAMF,GAAN,gFACvB6B,EADuB,UACdF,EADc,sCACwBC,EADxB,oBAENE,EAAAA,EAAAA,IAAUD,EAAK7B,GAFT,cAEvB+B,EAFuB,yBAGtBA,EAAS5B,MAHa,2CAAH,sDAMf6B,EAAc,mCAAG,WAAOC,EAAOjC,GAAd,gFACtB6B,EADsB,UACbF,EADa,gCACmBC,EADnB,kBACoCK,EADpC,uDAELH,EAAAA,EAAAA,IAAUD,EAAK7B,GAFV,cAEtB+B,EAFsB,yBAGrBA,EAAS5B,MAHY,2CAAH,wDAMd+B,EAAgB,mCAAG,WAAOC,EAASnC,GAAhB,gFACxB6B,EADwB,UACfF,EADe,iBACEQ,EADF,oBACqBP,EADrB,4BAEPE,EAAAA,EAAAA,IAAUD,EAAK7B,GAFR,cAExB+B,EAFwB,yBAGvBA,EAAS5B,MAHc,2CAAH,wDAMhBiC,EAAc,mCAAG,WAAOD,EAASnC,GAAhB,gFACtB6B,EADsB,UACbF,EADa,iBACIQ,EADJ,4BAC+BP,EAD/B,4BAELE,EAAAA,EAAAA,IAAUD,EAAK7B,GAFV,cAEtB+B,EAFsB,yBAGrBA,EAAS5B,MAHY,2CAAH,wDAMdkC,EAAe,mCAAG,WAAOF,EAASnC,GAAhB,gFACvB6B,EADuB,UACdF,EADc,iBACGQ,EADH,4BAC8BP,EAD9B,mCAENE,EAAAA,EAAAA,IAAUD,EAAK7B,GAFT,cAEvB+B,EAFuB,yBAGtBA,EAAS5B,MAHa,2CAAH,wDAMfmC,EAAa,mCAAG,WAAOH,EAASnC,GAAhB,gFACrB6B,EADqB,UACZF,EADY,iBACKQ,EADL,2BAC+BP,GAD/B,SAEJE,EAAAA,EAAAA,IAAUD,EAAK7B,GAFX,cAErB+B,EAFqB,yBAGpBA,EAAS5B,MAHW,2CAAH,uD","sources":["Pages/home/Home.js","components/movieList/MovieList.styled.jsx","components/movieList/MovieList.js","components/services/themoviedbAPI.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { getPopularFilms } from 'components/services/themoviedbAPI';\nimport MovieList from 'components/movieList/MovieList';\n\nexport const Home = () => {\n  const [popularFilms, setPopularFilms] = useState([]);\n\n  // useEffect(() => {\n  //   getPopularFilms().then(data => setPopularFilms(data)).catch(console.log);\n  // }, []);\n  // Аналог вызова асинхр ф-ии в useEffect //\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    const abortOptions = { signal: abortController.signal };\n\n    async function fetchPopular() {\n      try {\n        const data = await getPopularFilms(abortOptions);\n        setPopularFilms(data.results);\n      } catch (err) {\n        if (err.code === 'ERR_CANCELED') return;\n\n        console.log('Error');\n      }\n    }\n\n    fetchPopular();\n    return () => abortController.abort();\n  }, []);\n\n  return (\n    <>\n      <h2>Trending today</h2>\n      <MovieList movies={popularFilms} />\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const MovieListStyled = styled.ul`\n  margin-top: 15px;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 15px;\n  justify-content: center;\n`;\n\nexport const MovieItem = styled.li`\n  cursor: pointer;\n`;\n\nexport const MoviePoster = styled.img`\n  width: 280px;\n  height: 420px;\n`;\n\nexport const MovieTitle = styled.p`\n  /* padding: 4px; */\n  margin-top: 15px;\n\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  width: 265px;\n\n  :hover {\n    color: orangered;\n  }\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  MovieListStyled,\n  MovieTitle,\n  MoviePoster,\n  MovieItem,\n} from 'components/movieList/MovieList.styled';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <MovieListStyled>\n      {movies.map(({ id, title, poster_path }) => (\n        <MovieItem key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            <MoviePoster\n              src={\n                poster_path\n                  ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                  : 'https://motivatevalmorgan.com/wp-content/uploads/2016/06/default-movie.jpg'\n              }\n              alt={`Poster ${title}`}\n            />\n            <MovieTitle>{title}</MovieTitle>\n          </Link>\n        </MovieItem>\n      ))}\n    </MovieListStyled>\n  );\n};\n\nexport default MovieList;\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      poster_path: PropTypes.string,\n    })\n  ),\n};\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'a59dfea75e9e40e203f0819879862061';\n\nexport const getPopularFilms = async abortOptions => {\n  const url = `${BASE_URL}trending/movie/day?api_key=${API_KEY}&page=1`;\n  const response = await axios.get(url, abortOptions);\n  return response.data;\n};\n\nexport const getMovieByName = async (quary, abortOptions) => {\n  const url = `${BASE_URL}search/movie?api_key=${API_KEY}&query=${quary}&page=1&language=en-US&include_adult=false`;\n  const response = await axios.get(url, abortOptions);\n  return response.data;\n};\n\nexport const getInfoByMovieId = async (movieId, abortOptions) => {\n  const url = `${BASE_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`;\n  const response = await axios.get(url, abortOptions);\n  return response.data;\n};\n\nexport const getCastOfMovie = async (movieId, abortOptions) => {\n  const url = `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`;\n  const response = await axios.get(url, abortOptions);\n  return response.data;\n};\n\nexport const getMovieReviews = async (movieId, abortOptions) => {\n  const url = `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`;\n  const response = await axios.get(url, abortOptions);\n  return response.data;\n};\n\nexport const getMovieVideo = async (movieId, abortOptions) => {\n  const url = `${BASE_URL}movie/${movieId}/videos?api_key=${API_KEY}`;\n  const response = await axios.get(url, abortOptions);\n  return response.data;\n};\n"],"names":["Home","useState","popularFilms","setPopularFilms","useEffect","abortController","AbortController","abortOptions","signal","getPopularFilms","data","results","code","console","log","fetchPopular","abort","movies","MovieListStyled","styled","MovieItem","MoviePoster","MovieTitle","location","useLocation","map","id","title","poster_path","to","state","from","src","alt","BASE_URL","API_KEY","url","axios","response","getMovieByName","quary","getInfoByMovieId","movieId","getCastOfMovie","getMovieReviews","getMovieVideo"],"sourceRoot":""}