{"version":3,"file":"static/js/787.7376754f.chunk.js","mappings":"yNAqCA,UAjCgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwCE,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAEuBC,EAAAA,EAAAA,IAAgBN,GAFvC,OAEUO,EAFV,OAGIH,EAAgBG,EAAKC,SAHzB,gDAKIC,QAAQC,IAAI,SALhB,0DADc,uBAAC,WAAD,wBAUdC,EACD,GAAE,CAACX,KAGF,wBACGG,EAAaS,OAAS,EACrBT,EAAaU,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACf,2BACE,qCAAaD,MACb,uBAAIC,MAFGF,EADM,KAOjB,uEAIP,C,+LCjCKG,EAAW,gCACXC,EAAU,mCAEHC,EAAe,mCAAG,6FACvBC,EADuB,UACdH,EADc,sCACwBC,EADxB,oBAENG,EAAAA,EAAAA,IAAUD,GAFJ,cAEvBE,EAFuB,yBAGtBA,EAASf,MAHa,2CAAH,qDAMfgB,EAAc,mCAAG,WAAMC,GAAN,gFACtBJ,EADsB,UACbH,EADa,gCACmBC,EADnB,kBACoCM,EADpC,uDAELH,EAAAA,EAAAA,IAAUD,GAFL,cAEtBE,EAFsB,yBAGrBA,EAASf,MAHY,2CAAH,sDAMdkB,EAAgB,mCAAG,WAAMzB,GAAN,gFACxBoB,EADwB,UACfH,EADe,iBACEjB,EADF,oBACqBkB,EADrB,4BAEPG,EAAAA,EAAAA,IAAUD,GAFH,cAExBE,EAFwB,yBAGvBA,EAASf,MAHc,2CAAH,sDAMhBmB,EAAc,mCAAG,WAAM1B,GAAN,gFACtBoB,EADsB,UACbH,EADa,iBACIjB,EADJ,4BAC+BkB,EAD/B,4BAELG,EAAAA,EAAAA,IAAUD,GAFL,cAEtBE,EAFsB,yBAGrBA,EAASf,MAHY,2CAAH,sDAMdD,EAAe,mCAAG,WAAMN,GAAN,gFACvBoB,EADuB,UACdH,EADc,iBACGjB,EADH,4BAC8BkB,EAD9B,mCAENG,EAAAA,EAAAA,IAAUD,GAFJ,cAEvBE,EAFuB,yBAGtBA,EAASf,MAHa,2CAAH,qD","sources":["components/reviews/Reviews.js","components/services/themoviedbAPI.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getMovieReviews } from 'components/services/themoviedbAPI';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [movieReviews, setMovieReviews] = useState([]);\n\n  useEffect(() => {\n    async function fetchReviews() {\n      try {\n        const data = await getMovieReviews(movieId);\n        setMovieReviews(data.results);\n      } catch (err) {\n        console.log('Error');\n      }\n    }\n\n    fetchReviews();\n  }, [movieId]);\n\n  return (\n    <ul>\n      {movieReviews.length > 0 ? (\n        movieReviews.map(({ id, author, content }) => (\n          <li key={id}>\n            <h4>Author: {author}</h4>\n            <p>{content}</p>\n          </li>\n        ))\n      ) : (\n        <p>We don't have any reviews for this movies.</p>\n      )}\n    </ul>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'a59dfea75e9e40e203f0819879862061';\n\nexport const getPopularFilms = async () => {\n  const url = `${BASE_URL}trending/movie/day?api_key=${API_KEY}&page=1`;\n  const response = await axios.get(url);\n  return response.data;\n};\n\nexport const getMovieByName = async quary => {\n  const url = `${BASE_URL}search/movie?api_key=${API_KEY}&query=${quary}&page=1&language=en-US&include_adult=false`;\n  const response = await axios.get(url);\n  return response.data;\n};\n\nexport const getInfoByMovieId = async movieId => {\n  const url = `${BASE_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`;\n  const response = await axios.get(url);\n  return response.data;\n};\n\nexport const getCastOfMovie = async movieId => {\n  const url = `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`;\n  const response = await axios.get(url);\n  return response.data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const url = `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`;\n  const response = await axios.get(url);\n  return response.data;\n};\n"],"names":["movieId","useParams","useState","movieReviews","setMovieReviews","useEffect","getMovieReviews","data","results","console","log","fetchReviews","length","map","id","author","content","BASE_URL","API_KEY","getPopularFilms","url","axios","response","getMovieByName","quary","getInfoByMovieId","getCastOfMovie"],"sourceRoot":""}