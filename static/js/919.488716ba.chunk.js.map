{"version":3,"file":"static/js/919.488716ba.chunk.js","mappings":"oRAEaA,EAAcC,EAAAA,GAAAA,GAAH,6CAIXC,EAAcD,EAAAA,GAAAA,GAAH,6C,SC0CxB,EA1CgB,WACd,IAAQE,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwCE,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAoBC,EAAAA,EAAAA,MAAbC,GAAP,eAmBA,OAjBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAkB,IAAIC,gBACtBC,EAAe,CAAEC,OAAQH,EAAgBG,QAFjC,wCAId,8GAEuBC,EAAAA,EAAAA,IAAgBZ,EAASU,GAFhD,OAEUG,EAFV,OAGIT,EAAgBS,EAAKC,SAHzB,gDAKIC,QAAQC,IAAI,SALhB,0DAJc,sBAcd,OAdc,mCAadC,GACO,kBAAMT,EAAgBU,OAAtB,CACR,GAAE,CAAClB,KAGF,8BACGM,IACC,SAACT,EAAD,UACGM,EAAagB,OAAS,EACrBhB,EAAaiB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACf,UAACxB,EAAD,YACE,qCAAauB,MACb,uBAAIC,MAFYF,EADH,KAOjB,yEAMX,C,2NC5CKG,EAAW,gCACXC,EAAU,mCAEHC,EAAe,mCAAG,WAAMhB,GAAN,gFACvBiB,EADuB,UACdH,EADc,sCACwBC,EADxB,oBAENG,EAAAA,EAAAA,IAAUD,EAAKjB,GAFT,cAEvBmB,EAFuB,yBAGtBA,EAAShB,MAHa,2CAAH,sDAMfiB,EAAc,mCAAG,WAAOC,EAAOrB,GAAd,gFACtBiB,EADsB,UACbH,EADa,gCACmBC,EADnB,kBACoCM,EADpC,uDAELH,EAAAA,EAAAA,IAAUD,EAAKjB,GAFV,cAEtBmB,EAFsB,yBAGrBA,EAAShB,MAHY,2CAAH,wDAMdmB,EAAgB,mCAAG,WAAOhC,EAASU,GAAhB,gFACxBiB,EADwB,UACfH,EADe,iBACExB,EADF,oBACqByB,EADrB,4BAEPG,EAAAA,EAAAA,IAAUD,EAAKjB,GAFR,cAExBmB,EAFwB,yBAGvBA,EAAShB,MAHc,2CAAH,wDAMhBoB,EAAc,mCAAG,WAAOjC,EAASU,GAAhB,gFACtBiB,EADsB,UACbH,EADa,iBACIxB,EADJ,4BAC+ByB,EAD/B,4BAELG,EAAAA,EAAAA,IAAUD,EAAKjB,GAFV,cAEtBmB,EAFsB,yBAGrBA,EAAShB,MAHY,2CAAH,wDAMdD,EAAe,mCAAG,WAAOZ,EAASU,GAAhB,gFACvBiB,EADuB,UACdH,EADc,iBACGxB,EADH,4BAC8ByB,EAD9B,mCAENG,EAAAA,EAAAA,IAAUD,EAAKjB,GAFT,cAEvBmB,EAFuB,yBAGtBA,EAAShB,MAHa,2CAAH,wDAMfqB,EAAa,mCAAG,WAAOlC,EAASU,GAAhB,gFACrBiB,EADqB,UACZH,EADY,iBACKxB,EADL,2BAC+ByB,GAD/B,SAEJG,EAAAA,EAAAA,IAAUD,EAAKjB,GAFX,cAErBmB,EAFqB,yBAGpBA,EAAShB,MAHW,2CAAH,uD","sources":["components/reviews/Reviews.styled.jsx","components/reviews/Reviews.js","components/services/themoviedbAPI.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewsList = styled.ul`\n  margin-top: 15px;\n`;\n\nexport const ReviewsItem = styled.ul`\n  margin-top: 15px;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getMovieReviews } from 'components/services/themoviedbAPI';\nimport { ReviewsItem, ReviewsList } from './Reviews.styled';\nimport { useOutletContext } from 'react-router-dom';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [movieReviews, setMovieReviews] = useState([]);\n  const [isVisible] = useOutletContext();\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    const abortOptions = { signal: abortController.signal };\n\n    async function fetchReviews() {\n      try {\n        const data = await getMovieReviews(movieId, abortOptions);\n        setMovieReviews(data.results);\n      } catch (err) {\n        console.log('Error');\n      }\n    }\n\n    fetchReviews();\n    return () => abortController.abort();\n  }, [movieId]);\n\n  return (\n    <>\n      {isVisible && (\n        <ReviewsList>\n          {movieReviews.length > 0 ? (\n            movieReviews.map(({ id, author, content }) => (\n              <ReviewsItem key={id}>\n                <h4>Author: {author}</h4>\n                <p>{content}</p>\n              </ReviewsItem>\n            ))\n          ) : (\n            <p>We don't have any reviews for this movies.</p>\n          )}\n        </ReviewsList>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'a59dfea75e9e40e203f0819879862061';\n\nexport const getPopularFilms = async abortOptions => {\n  const url = `${BASE_URL}trending/movie/day?api_key=${API_KEY}&page=1`;\n  const response = await axios.get(url, abortOptions);\n  return response.data;\n};\n\nexport const getMovieByName = async (quary, abortOptions) => {\n  const url = `${BASE_URL}search/movie?api_key=${API_KEY}&query=${quary}&page=1&language=en-US&include_adult=false`;\n  const response = await axios.get(url, abortOptions);\n  return response.data;\n};\n\nexport const getInfoByMovieId = async (movieId, abortOptions) => {\n  const url = `${BASE_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`;\n  const response = await axios.get(url, abortOptions);\n  return response.data;\n};\n\nexport const getCastOfMovie = async (movieId, abortOptions) => {\n  const url = `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`;\n  const response = await axios.get(url, abortOptions);\n  return response.data;\n};\n\nexport const getMovieReviews = async (movieId, abortOptions) => {\n  const url = `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`;\n  const response = await axios.get(url, abortOptions);\n  return response.data;\n};\n\nexport const getMovieVideo = async (movieId, abortOptions) => {\n  const url = `${BASE_URL}movie/${movieId}/videos?api_key=${API_KEY}`;\n  const response = await axios.get(url, abortOptions);\n  return response.data;\n};\n"],"names":["ReviewsList","styled","ReviewsItem","movieId","useParams","useState","movieReviews","setMovieReviews","useOutletContext","isVisible","useEffect","abortController","AbortController","abortOptions","signal","getMovieReviews","data","results","console","log","fetchReviews","abort","length","map","id","author","content","BASE_URL","API_KEY","getPopularFilms","url","axios","response","getMovieByName","quary","getInfoByMovieId","getCastOfMovie","getMovieVideo"],"sourceRoot":""}