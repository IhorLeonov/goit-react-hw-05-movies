{"version":3,"file":"static/js/787.e258fa2c.chunk.js","mappings":"gOAyCA,UArCgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwCE,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAmBA,OAjBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAkB,IAAIC,gBACtBC,EAAe,CAAEC,OAAQH,EAAgBG,QAFjC,wCAId,8GAEuBC,EAAAA,EAAAA,IAAgBV,EAASQ,GAFhD,OAEUG,EAFV,OAGIP,EAAgBO,EAAKC,SAHzB,gDAKIC,QAAQC,IAAI,SALhB,0DAJc,sBAcd,OAdc,mCAadC,GACO,kBAAMT,EAAgBU,OAAtB,CACR,GAAE,CAAChB,KAGF,wBACGG,EAAac,OAAS,EACrBd,EAAae,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACf,2BACE,qCAAaD,MACb,uBAAIC,MAFGF,EADM,KAOjB,uEAIP,C,mMCrCKG,EAAW,gCACXC,EAAU,mCAEHC,EAAe,mCAAG,WAAMhB,GAAN,gFACvBiB,EADuB,UACdH,EADc,sCACwBC,EADxB,oBAENG,EAAAA,EAAAA,IAAUD,EAAKjB,GAFT,cAEvBmB,EAFuB,yBAGtBA,EAAShB,MAHa,2CAAH,sDAMfiB,EAAc,mCAAG,WAAOC,EAAOrB,GAAd,gFACtBiB,EADsB,UACbH,EADa,gCACmBC,EADnB,kBACoCM,EADpC,uDAELH,EAAAA,EAAAA,IAAUD,EAAKjB,GAFV,cAEtBmB,EAFsB,yBAGrBA,EAAShB,MAHY,2CAAH,wDAMdmB,EAAgB,mCAAG,WAAO9B,EAASQ,GAAhB,gFACxBiB,EADwB,UACfH,EADe,iBACEtB,EADF,oBACqBuB,EADrB,4BAEPG,EAAAA,EAAAA,IAAUD,EAAKjB,GAFR,cAExBmB,EAFwB,yBAGvBA,EAAShB,MAHc,2CAAH,wDAMhBoB,EAAc,mCAAG,WAAO/B,EAASQ,GAAhB,gFACtBiB,EADsB,UACbH,EADa,iBACItB,EADJ,4BAC+BuB,EAD/B,4BAELG,EAAAA,EAAAA,IAAUD,EAAKjB,GAFV,cAEtBmB,EAFsB,yBAGrBA,EAAShB,MAHY,2CAAH,wDAMdD,EAAe,mCAAG,WAAOV,EAASQ,GAAhB,gFACvBiB,EADuB,UACdH,EADc,iBACGtB,EADH,4BAC8BuB,EAD9B,mCAENG,EAAAA,EAAAA,IAAUD,EAAKjB,GAFT,cAEvBmB,EAFuB,yBAGtBA,EAAShB,MAHa,2CAAH,uD","sources":["components/reviews/Reviews.js","components/services/themoviedbAPI.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getMovieReviews } from 'components/services/themoviedbAPI';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [movieReviews, setMovieReviews] = useState([]);\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    const abortOptions = { signal: abortController.signal };\n\n    async function fetchReviews() {\n      try {\n        const data = await getMovieReviews(movieId, abortOptions);\n        setMovieReviews(data.results);\n      } catch (err) {\n        console.log('Error');\n      }\n    }\n\n    fetchReviews();\n    return () => abortController.abort();\n  }, [movieId]);\n\n  return (\n    <ul>\n      {movieReviews.length > 0 ? (\n        movieReviews.map(({ id, author, content }) => (\n          <li key={id}>\n            <h4>Author: {author}</h4>\n            <p>{content}</p>\n          </li>\n        ))\n      ) : (\n        <p>We don't have any reviews for this movies.</p>\n      )}\n    </ul>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'a59dfea75e9e40e203f0819879862061';\n\nexport const getPopularFilms = async abortOptions => {\n  const url = `${BASE_URL}trending/movie/day?api_key=${API_KEY}&page=1`;\n  const response = await axios.get(url, abortOptions);\n  return response.data;\n};\n\nexport const getMovieByName = async (quary, abortOptions) => {\n  const url = `${BASE_URL}search/movie?api_key=${API_KEY}&query=${quary}&page=1&language=en-US&include_adult=false`;\n  const response = await axios.get(url, abortOptions);\n  return response.data;\n};\n\nexport const getInfoByMovieId = async (movieId, abortOptions) => {\n  const url = `${BASE_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`;\n  const response = await axios.get(url, abortOptions);\n  return response.data;\n};\n\nexport const getCastOfMovie = async (movieId, abortOptions) => {\n  const url = `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`;\n  const response = await axios.get(url, abortOptions);\n  return response.data;\n};\n\nexport const getMovieReviews = async (movieId, abortOptions) => {\n  const url = `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`;\n  const response = await axios.get(url, abortOptions);\n  return response.data;\n};\n"],"names":["movieId","useParams","useState","movieReviews","setMovieReviews","useEffect","abortController","AbortController","abortOptions","signal","getMovieReviews","data","results","console","log","fetchReviews","abort","length","map","id","author","content","BASE_URL","API_KEY","getPopularFilms","url","axios","response","getMovieByName","quary","getInfoByMovieId","getCastOfMovie"],"sourceRoot":""}