{"version":3,"file":"static/js/62.c69d865b.chunk.js","mappings":"kSAIMA,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,iPAeHE,EAAW,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,GAAIC,EAAe,EAAfA,SAC7B,OACE,UAACL,EAAD,CAAYI,GAAIA,EAAhB,WACE,SAAC,MAAD,CAAaE,KAAK,OACjBD,IAGN,ECuDD,EA5EqB,WAAO,IAAD,IACjBE,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwCE,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAGMC,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,UAe7C,IAbAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAEuBC,EAAAA,EAAAA,IAAiBV,GAFxC,OAEUW,EAFV,OAGIP,EAAgBO,GAHpB,gDAKIC,QAAQC,IAAI,SALhB,0DADc,uBAAC,WAAD,wBAUdC,EACD,GAAE,CAACd,IAECG,EAAL,CAEA,IAAQY,EACNZ,EADMY,OAAQC,EACdb,EADca,SAAUC,EACxBd,EADwBc,YAAaC,EACrCf,EADqCe,aAAcC,EACnDhB,EADmDgB,MAAOC,EAC1DjB,EAD0DiB,aAG5D,OACE,4BACE,SAACxB,EAAD,CAAUC,GAAIQ,EAAd,6BACA,yBACGY,GACC,gBACEI,IAAG,yCAAoCJ,GACvCK,IAAG,iBAAYH,GACfI,MAAM,QACNC,OAAO,WAGT,kDAIJ,0BACGL,EADH,KACYD,EAAaO,MAAM,EAAG,GADlC,QAIA,wCAAgBC,KAAKC,MAAqB,GAAfP,GAA3B,QAEA,4BACE,sCACA,uBAAIJ,QAGN,4BACE,oCACA,uBAAID,EAAOa,OAAS,GAAKb,EAAOc,KAAI,qBAAGC,IAAH,IAAoBC,KAAK,WAG/D,4BACE,mDAEA,2BACE,yBACE,SAAC,KAAD,CAAMlC,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,8BAIN,SAAC,EAAAmC,SAAD,CAAUC,UAAU,6CAApB,UACE,SAAC,KAAD,QAlDmB,CAsD1B,C,+LC7EKC,EAAW,gCACXC,EAAU,mCAEHC,EAAe,mCAAG,6FACvBC,EADuB,UACdH,EADc,sCACwBC,EADxB,oBAENG,EAAAA,EAAAA,IAAUD,GAFJ,cAEvBE,EAFuB,yBAGtBA,EAAS5B,MAHa,2CAAH,qDAMf6B,EAAc,mCAAG,WAAMC,GAAN,gFACtBJ,EADsB,UACbH,EADa,gCACmBC,EADnB,kBACoCM,EADpC,uDAELH,EAAAA,EAAAA,IAAUD,GAFL,cAEtBE,EAFsB,yBAGrBA,EAAS5B,MAHY,2CAAH,sDAMdD,EAAgB,mCAAG,WAAMV,GAAN,gFACxBqC,EADwB,UACfH,EADe,iBACElC,EADF,oBACqBmC,EADrB,4BAEPG,EAAAA,EAAAA,IAAUD,GAFH,cAExBE,EAFwB,yBAGvBA,EAAS5B,MAHc,2CAAH,sDAMhB+B,EAAc,mCAAG,WAAM1C,GAAN,gFACtBqC,EADsB,UACbH,EADa,iBACIlC,EADJ,4BAC+BmC,EAD/B,4BAELG,EAAAA,EAAAA,IAAUD,GAFL,cAEtBE,EAFsB,yBAGrBA,EAAS5B,MAHY,2CAAH,sDAMdgC,EAAe,mCAAG,WAAM3C,GAAN,gFACvBqC,EADuB,UACdH,EADc,iBACGlC,EADH,4BAC8BmC,EAD9B,mCAENG,EAAAA,EAAAA,IAAUD,GAFJ,cAEvBE,EAFuB,yBAGtBA,EAAS5B,MAHa,2CAAH,qD","sources":["Pages/movieDetails/MovieDetails.styled.jsx","Pages/movieDetails/MovieDetails.js","components/services/themoviedbAPI.js"],"sourcesContent":["import { HiArrowLeft } from 'react-icons/hi';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  :hover {\n    color: orangered;\n  }\n`;\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"24\" />\n      {children}\n    </StyledLink>\n  );\n};\n","import { Outlet, useParams, Link, useLocation } from 'react-router-dom';\nimport { Suspense, useEffect, useState } from 'react';\nimport { getInfoByMovieId } from 'components/services/themoviedbAPI';\nimport { BackLink } from 'Pages/movieDetails/MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState(null);\n\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/movies';\n\n  useEffect(() => {\n    async function fetchInfo() {\n      try {\n        const data = await getInfoByMovieId(movieId);\n        setMovieDetails(data);\n      } catch (err) {\n        console.log('Error');\n      }\n    }\n\n    fetchInfo();\n  }, [movieId]);\n\n  if (!movieDetails) return;\n\n  const { genres, overview, poster_path, release_date, title, vote_average } =\n    movieDetails;\n\n  return (\n    <div>\n      <BackLink to={backLinkHref}>Back to movies</BackLink>\n      <div>\n        {poster_path ? (\n          <img\n            src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n            alt={`Poster ${title}`}\n            width=\"250px\"\n            height=\"375px\"\n          />\n        ) : (\n          <p>Poster must be here</p>\n        )}\n      </div>\n\n      <h2>\n        {title} ({release_date.slice(0, 4)})\n      </h2>\n\n      <p>User score: {Math.round(vote_average * 10)}%</p>\n\n      <div>\n        <h3>Overview</h3>\n        <p>{overview}</p>\n      </div>\n\n      <div>\n        <h4>Genres</h4>\n        <p>{genres.length > 0 && genres.map(({ name }) => name).join(' ')}</p>\n      </div>\n\n      <div>\n        <p>Additional information</p>\n\n        <ul>\n          <li>\n            <Link to=\"cast\">Cast</Link>\n          </li>\n          <li>\n            <Link to=\"reviews\">Reviews</Link>\n          </li>\n        </ul>\n      </div>\n      <Suspense fallback={<div>Loading page...</div>}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'a59dfea75e9e40e203f0819879862061';\n\nexport const getPopularFilms = async () => {\n  const url = `${BASE_URL}trending/movie/day?api_key=${API_KEY}&page=1`;\n  const response = await axios.get(url);\n  return response.data;\n};\n\nexport const getMovieByName = async quary => {\n  const url = `${BASE_URL}search/movie?api_key=${API_KEY}&query=${quary}&page=1&language=en-US&include_adult=false`;\n  const response = await axios.get(url);\n  return response.data;\n};\n\nexport const getInfoByMovieId = async movieId => {\n  const url = `${BASE_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`;\n  const response = await axios.get(url);\n  return response.data;\n};\n\nexport const getCastOfMovie = async movieId => {\n  const url = `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`;\n  const response = await axios.get(url);\n  return response.data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const url = `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`;\n  const response = await axios.get(url);\n  return response.data;\n};\n"],"names":["StyledLink","styled","Link","BackLink","to","children","size","movieId","useParams","useState","movieDetails","setMovieDetails","backLinkHref","useLocation","state","from","useEffect","getInfoByMovieId","data","console","log","fetchInfo","genres","overview","poster_path","release_date","title","vote_average","src","alt","width","height","slice","Math","round","length","map","name","join","Suspense","fallback","BASE_URL","API_KEY","getPopularFilms","url","axios","response","getMovieByName","quary","getCastOfMovie","getMovieReviews"],"sourceRoot":""}