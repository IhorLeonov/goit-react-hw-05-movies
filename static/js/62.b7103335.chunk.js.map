{"version":3,"file":"static/js/62.b7103335.chunk.js","mappings":"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","sources":["Pages/movieDetails/MovieDetails.styled.jsx","Pages/movieDetails/MovieDetails.js","components/services/themoviedbAPI.js"],"sourcesContent":["import { HiArrowLeft } from 'react-icons/hi';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MovieInfo = styled.div`\n  display: flex;\n  align-items: start;\n  margin-top: 10px;\n`;\n\nexport const MoviePoster = styled.img`\n  width: 180px;\n`;\n\nexport const MovieDescription = styled.div`\n  margin-left: 20px;\n`;\n\nexport const MovieDescriptionItem = styled.li`\n  margin-bottom: 15px;\n`;\n\nexport const AdditionalBox = styled.div`\n  margin-top: 15px;\n`;\n\nexport const AdditionalList = styled.div`\n  display: flex;\n  gap: 20px;\n`;\n\nexport const AdditionalItem = styled.li`\n  margin-top: 15px;\n\n  :hover {\n    color: orangered;\n  }\n`;\n\nexport const Border = styled.div`\n  margin-top: 20px;\n  border-bottom: 1px solid black;\n`;\n\nconst StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  /* padding: 8px 0; */\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  :hover {\n    color: orangered;\n  }\n`;\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"18\" />\n      {children}\n    </StyledLink>\n  );\n};\n","import { Outlet, useParams, Link, useLocation } from 'react-router-dom';\nimport { Suspense, useEffect, useRef, useState } from 'react';\nimport { getInfoByMovieId } from 'components/services/themoviedbAPI';\nimport {\n  BackLink,\n  MoviePoster,\n  MovieInfo,\n  MovieDescription,\n  MovieDescriptionItem,\n  Border,\n  AdditionalBox,\n  AdditionalItem,\n  AdditionalList,\n} from 'Pages/movieDetails/MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState(null);\n  const [isVisible, setIsVisible] = useState(false);\n  const [target, setTarget] = useState('');\n\n  const location = useLocation();\n  const backLinkRef = useRef(location.state?.from ?? '/movies');\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    const abortOptions = { signal: abortController.signal };\n\n    async function fetchInfo() {\n      try {\n        const data = await getInfoByMovieId(movieId, abortOptions);\n        setMovieDetails(data);\n      } catch (err) {\n        console.log('Error');\n      }\n    }\n\n    fetchInfo();\n    return () => abortController.abort();\n  }, [movieId]);\n\n  if (!movieDetails) return;\n\n  const { genres, overview, poster_path, release_date, title, vote_average } =\n    movieDetails;\n\n  return (\n    <div>\n      <BackLink to={backLinkRef.current}>Back</BackLink>\n      <MovieInfo>\n        <MoviePoster\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w500${poster_path}`\n              : 'https://motivatevalmorgan.com/wp-content/uploads/2016/06/default-movie.jpg'\n          }\n          alt={`Poster ${title}`}\n          width=\"100%\"\n        />\n\n        <MovieDescription>\n          <ul>\n            <MovieDescriptionItem>\n              <h2>\n                {title} ({release_date.slice(0, 4)})\n              </h2>\n              <p>User score: {Math.round(vote_average * 10)}%</p>\n            </MovieDescriptionItem>\n            <MovieDescriptionItem>\n              <h3>Overview</h3>\n              <p>{overview}</p>\n            </MovieDescriptionItem>\n            <MovieDescriptionItem>\n              <h3>Genres</h3>\n              <p>\n                {genres.length > 0 && genres.map(({ name }) => name).join(' ')}\n              </p>\n            </MovieDescriptionItem>\n          </ul>\n        </MovieDescription>\n      </MovieInfo>\n      <Border />\n\n      <AdditionalBox>\n        <h4>Additional information</h4>\n        <AdditionalList>\n          <AdditionalItem\n            onClick={() => {\n              if (target === 'cast') {\n                setIsVisible(prevState => !prevState);\n                return;\n              }\n              setIsVisible(true);\n              setTarget('cast');\n            }}\n          >\n            <Link to=\"cast\">Cast</Link>\n          </AdditionalItem>\n          <AdditionalItem\n            onClick={() => {\n              if (target === 'reviews') {\n                setIsVisible(prevState => !prevState);\n                return;\n              }\n              setIsVisible(true);\n              setTarget('reviews');\n            }}\n          >\n            <Link to=\"reviews\">Reviews</Link>\n          </AdditionalItem>\n          <AdditionalItem\n            onClick={() => {\n              if (target === 'trailer') {\n                setIsVisible(prevState => !prevState);\n                return;\n              }\n              setIsVisible(true);\n              setTarget('trailer');\n            }}\n          >\n            <Link to=\"trailer\">Trailer</Link>\n          </AdditionalItem>\n        </AdditionalList>\n      </AdditionalBox>\n\n      <Border />\n      <Suspense fallback={<div>Loading page...</div>}>\n        <Outlet context={[isVisible]} />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'a59dfea75e9e40e203f0819879862061';\n\nexport const getPopularFilms = async abortOptions => {\n  const url = `${BASE_URL}trending/movie/day?api_key=${API_KEY}&page=1`;\n  const response = await axios.get(url, abortOptions);\n  return response.data;\n};\n\nexport const getMovieByName = async (quary, abortOptions) => {\n  const url = `${BASE_URL}search/movie?api_key=${API_KEY}&query=${quary}&page=1&language=en-US&include_adult=false`;\n  const response = await axios.get(url, abortOptions);\n  return response.data;\n};\n\nexport const getInfoByMovieId = async (movieId, abortOptions) => {\n  const url = `${BASE_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`;\n  const response = await axios.get(url, abortOptions);\n  return response.data;\n};\n\nexport const getCastOfMovie = async (movieId, abortOptions) => {\n  const url = `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`;\n  const response = await axios.get(url, abortOptions);\n  return response.data;\n};\n\nexport const getMovieReviews = async (movieId, abortOptions) => {\n  const url = `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`;\n  const response = await axios.get(url, abortOptions);\n  return response.data;\n};\n\nexport const getMovieVideo = async (movieId, abortOptions) => {\n  const url = `${BASE_URL}movie/${movieId}/videos?api_key=${API_KEY}`;\n  const response = await axios.get(url, abortOptions);\n  return response.data;\n};\n"],"names":["MovieInfo","styled","MoviePoster","MovieDescription","MovieDescriptionItem","AdditionalBox","AdditionalList","AdditionalItem","Border","StyledLink","Link","BackLink","to","children","size","movieId","useParams","useState","movieDetails","setMovieDetails","isVisible","setIsVisible","target","setTarget","location","useLocation","backLinkRef","useRef","state","from","useEffect","abortController","AbortController","abortOptions","signal","getInfoByMovieId","data","console","log","fetchInfo","abort","genres","overview","poster_path","release_date","title","vote_average","current","src","alt","width","slice","Math","round","length","map","name","join","onClick","prevState","Suspense","fallback","context","BASE_URL","API_KEY","getPopularFilms","url","axios","response","getMovieByName","quary","getCastOfMovie","getMovieReviews","getMovieVideo"],"sourceRoot":""}