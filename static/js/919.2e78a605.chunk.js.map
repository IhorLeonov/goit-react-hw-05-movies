{"version":3,"file":"static/js/919.2e78a605.chunk.js","mappings":"oRAEaA,EAAcC,EAAAA,GAAAA,GAAH,6CAIXC,EAAcD,EAAAA,GAAAA,GAAH,6C,SCgDxB,EAhDgB,WACd,IAAQE,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwCE,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAAoBC,EAAAA,EAAAA,MAAbC,GAAP,eAwBA,OAtBAC,EAAAA,EAAAA,YAAU,WACRH,GAAa,GACb,IAAMI,EAAkB,IAAIC,gBACtBC,EAAe,CAAEC,OAAQH,EAAgBG,QAHjC,wCAKd,8GAEuBC,EAAAA,EAAAA,IAAgBd,EAASY,GAFhD,OAEUG,EAFV,OAGIX,EAAgBW,EAAKC,SACrBV,GAAa,GAJjB,mDAMqB,iBAAb,KAAIW,KANZ,mDAQIC,QAAQC,IAAI,SARhB,sGALc,sBAmBd,OAnBc,mCAkBdC,GACO,kBAAMV,EAAgBW,OAAtB,CACR,GAAE,CAACrB,KAGF,8BACGQ,IACC,UAACX,EAAD,WACGM,EAAamB,OAAS,GACrBnB,EAAaoB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACf,UAAC3B,EAAD,YACE,qCAAa0B,MACb,uBAAIC,MAFYF,EADH,IAMM,IAAxBrB,EAAamB,SAAiBjB,IAC7B,0EAMX,C,2NClDKsB,EAAW,gCACXC,EAAU,mCAEHC,EAAe,mCAAG,WAAMjB,GAAN,gFACvBkB,EADuB,UACdH,EADc,sCACwBC,EADxB,oBAENG,EAAAA,EAAAA,IAAUD,EAAKlB,GAFT,cAEvBoB,EAFuB,yBAGtBA,EAASjB,MAHa,2CAAH,sDAMfkB,EAAc,mCAAG,WAAOC,EAAOtB,GAAd,gFACtBkB,EADsB,UACbH,EADa,gCACmBC,EADnB,kBACoCM,EADpC,uDAELH,EAAAA,EAAAA,IAAUD,EAAKlB,GAFV,cAEtBoB,EAFsB,yBAGrBA,EAASjB,MAHY,2CAAH,wDAMdoB,EAAgB,mCAAG,WAAOnC,EAASY,GAAhB,gFACxBkB,EADwB,UACfH,EADe,iBACE3B,EADF,oBACqB4B,EADrB,4BAEPG,EAAAA,EAAAA,IAAUD,EAAKlB,GAFR,cAExBoB,EAFwB,yBAGvBA,EAASjB,MAHc,2CAAH,wDAMhBqB,EAAc,mCAAG,WAAOpC,EAASY,GAAhB,gFACtBkB,EADsB,UACbH,EADa,iBACI3B,EADJ,4BAC+B4B,EAD/B,4BAELG,EAAAA,EAAAA,IAAUD,EAAKlB,GAFV,cAEtBoB,EAFsB,yBAGrBA,EAASjB,MAHY,2CAAH,wDAMdD,EAAe,mCAAG,WAAOd,EAASY,GAAhB,gFACvBkB,EADuB,UACdH,EADc,iBACG3B,EADH,4BAC8B4B,EAD9B,mCAENG,EAAAA,EAAAA,IAAUD,EAAKlB,GAFT,cAEvBoB,EAFuB,yBAGtBA,EAASjB,MAHa,2CAAH,wDAMfsB,EAAa,mCAAG,WAAOrC,EAASY,GAAhB,gFACrBkB,EADqB,UACZH,EADY,iBACK3B,EADL,2BAC+B4B,GAD/B,SAEJG,EAAAA,EAAAA,IAAUD,EAAKlB,GAFX,cAErBoB,EAFqB,yBAGpBA,EAASjB,MAHW,2CAAH,uD","sources":["components/reviews/Reviews.styled.jsx","components/reviews/Reviews.js","components/services/themoviedbAPI.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewsList = styled.ul`\n  margin-top: 15px;\n`;\n\nexport const ReviewsItem = styled.ul`\n  margin-top: 15px;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getMovieReviews } from 'components/services/themoviedbAPI';\nimport { ReviewsItem, ReviewsList } from './Reviews.styled';\nimport { useOutletContext } from 'react-router-dom';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [movieReviews, setMovieReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isVisible] = useOutletContext();\n\n  useEffect(() => {\n    setIsLoading(true);\n    const abortController = new AbortController();\n    const abortOptions = { signal: abortController.signal };\n\n    async function fetchReviews() {\n      try {\n        const data = await getMovieReviews(movieId, abortOptions);\n        setMovieReviews(data.results);\n        setIsLoading(false);\n      } catch (err) {\n        if (err.code === 'ERR_CANCELED') return;\n\n        console.log('Error');\n      } finally {\n      }\n    }\n\n    fetchReviews();\n    return () => abortController.abort();\n  }, [movieId]);\n\n  return (\n    <>\n      {isVisible && (\n        <ReviewsList>\n          {movieReviews.length > 0 &&\n            movieReviews.map(({ id, author, content }) => (\n              <ReviewsItem key={id}>\n                <h4>Author: {author}</h4>\n                <p>{content}</p>\n              </ReviewsItem>\n            ))}\n          {movieReviews.length === 0 && !isLoading && (\n            <p>We don't have any reviews for this movies.</p>\n          )}\n        </ReviewsList>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'a59dfea75e9e40e203f0819879862061';\n\nexport const getPopularFilms = async abortOptions => {\n  const url = `${BASE_URL}trending/movie/day?api_key=${API_KEY}&page=1`;\n  const response = await axios.get(url, abortOptions);\n  return response.data;\n};\n\nexport const getMovieByName = async (quary, abortOptions) => {\n  const url = `${BASE_URL}search/movie?api_key=${API_KEY}&query=${quary}&page=1&language=en-US&include_adult=false`;\n  const response = await axios.get(url, abortOptions);\n  return response.data;\n};\n\nexport const getInfoByMovieId = async (movieId, abortOptions) => {\n  const url = `${BASE_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`;\n  const response = await axios.get(url, abortOptions);\n  return response.data;\n};\n\nexport const getCastOfMovie = async (movieId, abortOptions) => {\n  const url = `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`;\n  const response = await axios.get(url, abortOptions);\n  return response.data;\n};\n\nexport const getMovieReviews = async (movieId, abortOptions) => {\n  const url = `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`;\n  const response = await axios.get(url, abortOptions);\n  return response.data;\n};\n\nexport const getMovieVideo = async (movieId, abortOptions) => {\n  const url = `${BASE_URL}movie/${movieId}/videos?api_key=${API_KEY}`;\n  const response = await axios.get(url, abortOptions);\n  return response.data;\n};\n"],"names":["ReviewsList","styled","ReviewsItem","movieId","useParams","useState","movieReviews","setMovieReviews","isLoading","setIsLoading","useOutletContext","isVisible","useEffect","abortController","AbortController","abortOptions","signal","getMovieReviews","data","results","code","console","log","fetchReviews","abort","length","map","id","author","content","BASE_URL","API_KEY","getPopularFilms","url","axios","response","getMovieByName","quary","getInfoByMovieId","getCastOfMovie","getMovieVideo"],"sourceRoot":""}