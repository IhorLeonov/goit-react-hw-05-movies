{"version":3,"file":"static/js/879.a1109886.chunk.js","mappings":"gOAoDA,UAhDa,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAkCE,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAmBA,OAjBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAkB,IAAIC,gBACtBC,EAAe,CAAEC,OAAQH,EAAgBG,QAFjC,wCAId,8GAEuBC,EAAAA,EAAAA,IAAeV,EAASQ,GAF/C,OAEUG,EAFV,OAGIP,EAAaO,EAAKC,MAHtB,gDAKIC,QAAQC,IAAI,SALhB,0DAJc,sBAcd,OAdc,mCAadC,GACO,kBAAMT,EAAgBU,OAAtB,CACR,GAAE,CAAChB,KAGF,wBACGG,EAAUc,OAAS,EAClBd,EAAUe,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,UAA3B,OACZ,2BACE,yBACGF,GACC,gBACEG,IAAG,yCAAoCH,GACvCI,IAAG,iBAAYH,GACfI,MAAM,WAGR,kCAAUJ,EAAV,sBAGJ,uBAAIA,KACJ,uCAAeC,OAbRH,EADG,KAkBd,sFAIP,C,mMChDKO,EAAW,gCACXC,EAAU,mCAEHC,EAAe,mCAAG,WAAMpB,GAAN,gFACvBqB,EADuB,UACdH,EADc,sCACwBC,EADxB,oBAENG,EAAAA,EAAAA,IAAUD,EAAKrB,GAFT,cAEvBuB,EAFuB,yBAGtBA,EAASpB,MAHa,2CAAH,sDAMfqB,EAAc,mCAAG,WAAOC,EAAOzB,GAAd,gFACtBqB,EADsB,UACbH,EADa,gCACmBC,EADnB,kBACoCM,EADpC,uDAELH,EAAAA,EAAAA,IAAUD,EAAKrB,GAFV,cAEtBuB,EAFsB,yBAGrBA,EAASpB,MAHY,2CAAH,wDAMduB,EAAgB,mCAAG,WAAOlC,EAASQ,GAAhB,gFACxBqB,EADwB,UACfH,EADe,iBACE1B,EADF,oBACqB2B,EADrB,4BAEPG,EAAAA,EAAAA,IAAUD,EAAKrB,GAFR,cAExBuB,EAFwB,yBAGvBA,EAASpB,MAHc,2CAAH,wDAMhBD,EAAc,mCAAG,WAAOV,EAASQ,GAAhB,gFACtBqB,EADsB,UACbH,EADa,iBACI1B,EADJ,4BAC+B2B,EAD/B,4BAELG,EAAAA,EAAAA,IAAUD,EAAKrB,GAFV,cAEtBuB,EAFsB,yBAGrBA,EAASpB,MAHY,2CAAH,wDAMdwB,EAAe,mCAAG,WAAOnC,EAASQ,GAAhB,gFACvBqB,EADuB,UACdH,EADc,iBACG1B,EADH,4BAC8B2B,EAD9B,mCAENG,EAAAA,EAAAA,IAAUD,EAAKrB,GAFT,cAEvBuB,EAFuB,yBAGtBA,EAASpB,MAHa,2CAAH,uD","sources":["components/cast/Cast.js","components/services/themoviedbAPI.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getCastOfMovie } from 'components/services/themoviedbAPI';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [movieCast, setMovieCast] = useState([]);\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    const abortOptions = { signal: abortController.signal };\n\n    async function fetchCast() {\n      try {\n        const data = await getCastOfMovie(movieId, abortOptions);\n        setMovieCast(data.cast);\n      } catch (err) {\n        console.log('Error');\n      }\n    }\n\n    fetchCast();\n    return () => abortController.abort();\n  }, [movieId]);\n\n  return (\n    <ul>\n      {movieCast.length > 0 ? (\n        movieCast.map(({ id, profile_path, name, character }) => (\n          <li key={id}>\n            <div>\n              {profile_path ? (\n                <img\n                  src={`https://image.tmdb.org/t/p/w500${profile_path}`}\n                  alt={`Poster ${name}`}\n                  width=\"150px\"\n                />\n              ) : (\n                <p>Photo {name} must be here</p>\n              )}\n            </div>\n            <p>{name}</p>\n            <p>Character: {character}</p>\n          </li>\n        ))\n      ) : (\n        <p>We don't have any information about cast for this movies.</p>\n      )}\n    </ul>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'a59dfea75e9e40e203f0819879862061';\n\nexport const getPopularFilms = async abortOptions => {\n  const url = `${BASE_URL}trending/movie/day?api_key=${API_KEY}&page=1`;\n  const response = await axios.get(url, abortOptions);\n  return response.data;\n};\n\nexport const getMovieByName = async (quary, abortOptions) => {\n  const url = `${BASE_URL}search/movie?api_key=${API_KEY}&query=${quary}&page=1&language=en-US&include_adult=false`;\n  const response = await axios.get(url, abortOptions);\n  return response.data;\n};\n\nexport const getInfoByMovieId = async (movieId, abortOptions) => {\n  const url = `${BASE_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`;\n  const response = await axios.get(url, abortOptions);\n  return response.data;\n};\n\nexport const getCastOfMovie = async (movieId, abortOptions) => {\n  const url = `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`;\n  const response = await axios.get(url, abortOptions);\n  return response.data;\n};\n\nexport const getMovieReviews = async (movieId, abortOptions) => {\n  const url = `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`;\n  const response = await axios.get(url, abortOptions);\n  return response.data;\n};\n"],"names":["movieId","useParams","useState","movieCast","setMovieCast","useEffect","abortController","AbortController","abortOptions","signal","getCastOfMovie","data","cast","console","log","fetchCast","abort","length","map","id","profile_path","name","character","src","alt","width","BASE_URL","API_KEY","getPopularFilms","url","axios","response","getMovieByName","quary","getInfoByMovieId","getMovieReviews"],"sourceRoot":""}